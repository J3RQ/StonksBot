# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build
    - name: System Test
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      env: # Or as an environment variable
        OATH1: ${{ secrets.TESTER_BOT_OATH }}
        OATH2: ${{ secrets.STONKSBOT_OATH }}
      with:
        arguments: integrationTest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.aws_ec2_deployer_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_ec2_deployer_secret }}
    steps:
    - name: FatJar
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: shadowJar -x test

    - name: Push to S3
      run: aws s3 cp $(ls build/libs/*-all.jar) s3://stonksbot/stonksbot.jar

    - name: ec2 instance address
      run: echo ::set-env name=HOST_ADDRESS::$(aws ec2 describe-instances --region=eu-west-1 --filters Name=tag-value,Values=stonksbot --query 'Reservations[*].Instances[*].PublicIpAddress' --output=text |tr -d '\n')

    - name: Run
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.HOST_ADDRESS }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.DEPLOYMENT_SSH_KEY }}
        port: 22
        script: sudo systemctl restart stonksbot